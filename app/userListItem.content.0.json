{
    "type": "FieldValue",
    "config": {
        "loadAsync": false,
        "identifier": "",
        "fieldLabelScript": "return \"\"",
        "fieldValueScript": "return item.getName();",
        "formatElementScript": "\n\nnew UIPopover(el.appendChild(new Element('span', {\"class\":\"user-info\"})),{\n        content:'<pre>item json<\/pre>',\n        anchor:UIPopover.AnchorAuto()\n    });\n\n\n    \nvar read=item.getAccess().editAccessEnd;\nvar write=item.getAccess().readAccessEnd;\nvar addDecoration=function(time, className){\n  \n  if(parseInt(time)>parseInt((new Date()).getTime()\/1000)){\n      el.addClass(className);\n  }\n    \n};\naddDecoration(read, 'has-read');\naddDecoration(write, 'has-write');\n\nif(item.getId()+\"\"==AppClient.getId()+\"\"){\n    el.addClass('is-user');\n}\n\nif(item.getRoles().indexOf(\"special\")>=0){\n    el.addClass('is-admin');\n}\n\nif(!(el.hasClass('is-admin')||el.hasClass('is-user'))){\n    el.addClass('is-restricted');\n}\n\nif(el.hasClass('has-read')||el.hasClass('has-write')){\n    var span=el.appendChild(new Element('span',{\"class\":\"timer\"}));\n    setInterval(function(){\n        \n       var mins=Math.ceil((Math.max(parseInt(read||0), parseInt(write||0))-((new Date()).getTime()\/1000))\/60);\n       \n        var hours=Math.floor(mins\/60);\n        mins=mins%60;\n        \n        var days=Math.floor(hours\/24);\n        hours=hours%24;\n        \n        if(days>0){\n            days=days+\"day\"+(days==1?\" \":\"s \");\n        }\n        \n        hours=hours+\":\";\n        \n        if(mins<10){\n            mins=\"0\"+mins;\n        }\n        \n        mins=mins+\"m\";\n        \n        span.innerHTML=\" \"+days+hours+mins;\n        \n    }, 1000);\n}"
    }
}