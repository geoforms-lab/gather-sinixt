{
    "type": "UIListView",
    "config": {
        "listClassName": "",
        "className": "selectable-layer",
        "identifier": "",
        "viewType": "view",
        "namedView": "selectableLayer",
        "shouldRender": true,
        "namedViewScript": "return namedView",
        "showInlineEdit": false,
        "namedFormView": "defaultView",
        "formOptions": "\"{}\"",
        "showDeleteButton": false,
        "deleteItemScript": "defaultBehaviorFn()",
        "initModuleScript": "",
        "formatModuleScript": "",
        "resolveItemScript": "return item",
        "filterModulesScript": "return list",
        "itemButtonsScript": "return [];",
        "insertAtTop": false,
        "targetName": "",
        "getItemListScript": "return application.getLayerManager().getLayers().filter(function(l){\n    return l.getId()+\"\"!=\"25\";\n}).filter(function(l){\n    \n    if(!(item instanceof GeoliveMarker)){\n        return l.options.readAccess==\"specialView\"||l.options.writeAccess==\"specialEdit\";\n    }\n    return true;\n})",
        "formatItemListScript": "return list;",
        "formatListItemModuleScript": "\n\n\n\/\/ if(childView.hasWizard()){\n\/\/     console.log('has wizard!')\n    \n\/\/     childView.getWizard().addEvent('beforeComplete',function(){\n\/\/       console.log('update data'); \n        \n\/\/         wizard.setDataValue('icon', 'someIcon')\n       \n\/\/     });\n    \n\/\/ }\n\n\n\n\/*use as layer select, for marker form*\/\n\nchildView.getElement().addClass('read-'+child.options.readAccess);\nchildView.getElement().addClass('write-'+child.options.writeAccess);\n\nif(item instanceof GeoliveMarker){\n    \/\/console.error([item, child]);\n    if(item.getLayer().getId()===child.getId()){\n        childView.getElement().addClass('selected');\n        listModule._selected=childView;\n    }\n    \n    \n    \n    childView.getElement().addEvent('click', function(){\n    \n        var el=childView.getElement();\n        if(el.hasClass('selected')){\n            return;\n        }\n        \n        if(listModule._selected){\n            listModule._selected.getElement().removeClass('selected');\n        }\n        \n        listModule._selected=childView;\n        el.addClass('selected');\n        \n        if(childView.hasWizard()){\n            childView.getWizard().setDataValue('icon', (window.location.host||window.location.origin)+\"\/\"+child.options.icon+\"?thumb=>48x>48\");\n            childView.getWizard().setDataValue('lid', child.getId());\n        }\n    \n        \n    });\n    \n    \n    return;\n}\n\n\n\n\n\n\n\/*Use as selection list*\/\n\nchildView.getElement().addEvent('click', function(){\n    \n    var el=childView.getElement();\n    if(el.hasClass('selected')){\n        el.removeClass('selected');\n        return;\n    }\n    \n    el.addClass('selected');\n    \n    if(childView.hasWizard()){\n        \n        childView.getWizard().setDataValue('_icon_', child.getId());\n        \n        \n    }\n\n    \n});\n\n\n",
        "emptyNamedView": "emptyListView",
        "filterItemsScript": "return true;",
        "sortItemsScript": "",
        "maxItems": "-1"
    }
}